"use client";
// import type { Metadata } from "next";
import { Inter, Manrope } from "next/font/google";
// import localFont from "next/font/local"; // Uncomment when adding Lufga font files
import "./globals.css";
import SplashScreen from "@/components/SplashScreen";
import { usePathname } from "next/navigation";
import { useEffect, useState } from "react";
import { Toaster } from "@/components/ui/sonner";
import ReactQueryClientProvider from "@/utils/ReactQueryClientProvider";
import { CartProvider } from "@/context/CartContext";
import Common from "@/utils/common";
import NextAuthProvider from "@/components/providers/NextAuthProvider";

// Lufga Font (local) - Commented out until font files are added
// const lufga = localFont({
//   src: [
//     {
//       path: "../fonts/lufga-light.woff2",
//       weight: "300",
//       style: "normal",
//     },
//     {
//       path: "../fonts/lufga-regular.woff2",
//       weight: "400",
//       style: "normal",
//     },
//     {
//       path: "../fonts/lufga-medium.woff2",
//       weight: "500",
//       style: "normal",
//     },
//     {
//       path: "../fonts/lufga-semibold.woff2",
//       weight: "600",
//       style: "normal",
//     },
//     {
//       path: "../fonts/lufga-bold.woff2",
//       weight: "700",
//       style: "normal",
//     },
//   ],
//   variable: "--font-lufga",
//   display: "swap",
// });

// Alternative fonts similar to Lufga
const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  display: "swap",
});

const manrope = Manrope({
  variable: "--font-manrope",
  subsets: ["latin"],
  display: "swap",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();
  const isHome = pathname === "/";
  const [isLoading, setIsLoading] = useState(isHome);

  useEffect(() => {
    if (isLoading) return;
  }, [isLoading]);

  return (
    <html lang="en">
      <body
        className={`${inter.variable} ${manrope.variable} antialiased`}
      >
        <NextAuthProvider>
          <ReactQueryClientProvider>
            <CartProvider>
              <Common>
                {isLoading && isHome ? (
                  <SplashScreen finishLoading={() => setIsLoading(false)} />
                ) : (
                  children
                )}
              </Common>
            </CartProvider>
          </ReactQueryClientProvider>
        </NextAuthProvider>
        <Toaster richColors position="top-center" />
      </body>
    </html>
  );
}
